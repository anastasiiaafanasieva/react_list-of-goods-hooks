{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isClicked","setStart","sortBy","setSortby","reverse","setReverse","selectLength","setSelectLength","filteredGoods","filter","value","length","sort","item1","item2","localeCompare","replaceAll","className","type","classNames","hidden","onClick","map","good","htmlFor","min","max","name","id","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"0OAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8HaC,EA3HO,WACpB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAQMC,EAAgBX,EACnBY,QAAO,SAAAC,GAAK,OAAIA,EAAMC,QAAUL,KAoBnC,OAlBAE,EAAcI,MAAK,SAACC,EAAOC,GACzB,OAAQZ,GACN,IAAK,MACH,OAAOW,EAAME,cAAcD,GAE7B,IAAK,aACH,OAAOD,EAAMG,WAAW,IAAK,IAAIL,OAC7BG,EAAME,WAAW,IAAK,IAAIL,OAEhC,QACE,OAAO,MAITP,GACFI,EAAcJ,UAId,sBAAKa,UAAU,MAAf,UACE,uCAIA,wBACEC,KAAK,SACLD,UAAWE,IACT,gBACA,CAAEC,OAAQpB,IAEZqB,QAAS,kBAAMpB,GAAS,IAN1B,mBAUCD,EAEG,qCACE,qBAAKiB,UAAU,OAAf,SACE,6BACGT,EAAcc,KAAI,SAAAC,GAAI,OACrB,6BACGA,GADMA,UAOf,sBAAKN,UAAU,SAAf,UACE,wBACEC,KAAK,SACLD,UAAU,iBACVI,QAAS,kBAAMlB,EAAU,QAH3B,iCAQA,wBACEe,KAAK,SACLD,UAAU,iBACVI,QAAS,kBAAMlB,EAAU,eAH3B,iCAQA,wBACEe,KAAK,SACLD,UAAU,iBACVI,QAAS,kBAAMhB,GAAYD,IAH7B,qBAQA,+BACE,wBACEa,UAAU,eACVO,QAAQ,eAFV,mCAKG,IACD,uBACEN,KAAK,SACLO,IAAK,EACLC,IAAK7B,EAAgBc,OACrBgB,KAAK,eACLC,GAAG,eACHlB,MAAOJ,EACPuB,SAAU,SAACC,GACTvB,GAAiBuB,EAAMC,OAAOrB,eAMtC,wBACEO,UAAU,uCACVC,KAAK,SACLG,QAzGA,WACZlB,EAAU,IACVE,GAAW,GACXE,EAAgB,IAmGN,yBAUJ,SCpIVyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.afe65bce.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isClicked, setStart] = useState(false);\n  const [sortBy, setSortby] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const [selectLength, setSelectLength] = useState(1);\n\n  const reset = () => {\n    setSortby('');\n    setReverse(false);\n    setSelectLength(1);\n  };\n\n  const filteredGoods = goodsFromServer\n    .filter(value => value.length >= selectLength);\n\n  filteredGoods.sort((item1, item2) => {\n    switch (sortBy) {\n      case 'ASC':\n        return item1.localeCompare(item2);\n\n      case 'NameLength':\n        return item1.replaceAll(' ', '').length\n          - item2.replaceAll(' ', '').length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (reverse) {\n    filteredGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Goods\n      </h1>\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'button__start',\n          { hidden: isClicked },\n        )}\n        onClick={() => setStart(true)}\n      >\n        Start\n      </button>\n      {isClicked\n        ? (\n          <>\n            <div className=\"list\">\n              <ul>\n                {filteredGoods.map(good => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            <div className=\"button\">\n              <button\n                type=\"button\"\n                className=\"button__option\"\n                onClick={() => setSortby('ASC')}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button__option\"\n                onClick={() => setSortby('NameLength')}\n              >\n                Sort by name length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button__option\"\n                onClick={() => setReverse(!reverse)}\n              >\n                Reverse\n              </button>\n\n              <form>\n                <label\n                  className=\"button__form\"\n                  htmlFor=\"selectLength\"\n                >\n                  Filter by name length:\n                  {' '}\n                  <input\n                    type=\"number\"\n                    min={1}\n                    max={goodsFromServer.length}\n                    name=\"selectLength\"\n                    id=\"selectLength\"\n                    value={selectLength}\n                    onChange={(event) => {\n                      setSelectLength(+event.target.value);\n                    }}\n                  />\n                </label>\n              </form>\n\n              <button\n                className=\"button__option button__option__reset\"\n                type=\"button\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            </div>\n          </>\n        )\n        : null}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}